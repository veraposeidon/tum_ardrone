#! /usr/bin/env python
# 实现动态参数配置需要编写一个配置文件，在功能包中创建一个放置配置文件的cfg文件夹，然后在其中创建一个配置文件xxx.cfg：
# 配置文件使用python实现
PACKAGE='tum_ardrone'

#from driver_base.msg import SensorLevels
# 首先需要导入dynamic_reconfigure功能包提供的参数生成器（parameter generator）。
from dynamic_reconfigure.parameter_generator_catkin import *

# 然后创建一个参数生成器
gen = ParameterGenerator()



#       Name                    Type        Reconfiguration lvl Description                                                                 Default Min     Max
gen.add("UseControlGains",      bool_t,     0,                  "Use Control Commands for prediction in EKF",                               True)
gen.add("UseNavdata",           bool_t,     0,                  "Enable EKF-Updates from Navdata",                                          True)
#gen.add("UseNavdataSpeeds",    bool_t,     0,                  "Enable EKF-Updates from Navdata Speeds",                                   True)
gen.add("UsePTAM",              bool_t,     0,                  "Enable EKF-Updates from PTAM",                                             True)

gen.add("PTAMMapLock",          bool_t,     0,                  "Lock PTAM Map (take no more KF)",                                          False)
gen.add("PTAMSyncLock",         bool_t,     0,                  "Lock PTAM <-> EKF sync (fix scale & offsets)",                             False)
gen.add("PTAMMaxKF",            int_t,      0,                  "Max. Number of KF (1 => inf)",                                             200,    1,      1000)

gen.add("PTAMMinKFDist",        double_t,   0,                  "Min. new KF distance in meters (only works properly after scale init)",    0.4,    0.0,    5.0)
gen.add("PTAMMinKFWiggleDist",  double_t,   0,                  "Min. new KF distance relative to mean scene depth.",                       0.075,  0.0,    10.0)
gen.add("PTAMMinKFTimeDiff",    double_t,   0,                  "Min. time between taking two KF in seconds",                               0.5,    0.0,    10)

gen.add("RescaleFixOrigin",     bool_t,     0,                  "on scale reestimation: if TRUE, the map init pos remains fixed, if false, the current drone pos remains fixed.", True)



gen.add("c1",                   double_t,   0,                  "prediction model parameter",                                               0.58,   0.0,    50)
gen.add("c2",                   double_t,   0,                  "prediction model parameter",                                               17.5,   0.0,    50)
gen.add("c3",                   double_t,   0,                  "prediction model parameter",                                               7,      0.0,    50)
gen.add("c4",                   double_t,   0,                  "prediction model parameter",                                               24,     0.0,    50)
gen.add("c5",                   double_t,   0,                  "prediction model parameter",                                               25,     0.0,    50)
gen.add("c6",                   double_t,   0,                  "prediction model parameter",                                               90,     0.0,    200)
gen.add("c7",                   double_t,   0,                  "prediction model parameter",                                               0.8,    0.0,    50)
gen.add("c8",                   double_t,   0,                  "prediction model parameter",                                               0.6,    0.0,    50)


# 最后一行代码用于生成所有C++和Python相关的文件并且退出程序，这里第二个参数表示动态参数运行的节点名，第三个参数是生成文件所使用的前缀，需要和配置文件名相同。
exit(gen.generate(PACKAGE, "Config", "StateestimationParams"))
